<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 이메일을 전송하는 기능을 제공하는 JavaMailSenderImpl 클래스를 Spring Bean으로 등록 -->
	<!--  => SMTP서비스를 제공하는 서버의 정보를 JavaMailSenderImpl 클래스의 필드값으로 전달하여 저장 -->
	<!-- JavaMailSenderImpl는 Spring Framework가 제공해쥬는 라이브러리 클래스 -->
	<!-- JavaMailSenderImpl 클래스가 가진 메소드를 사용하여 메일 전송 => SpringBean으로 만들어질때 필요한 것이 있는데 Injection시켜쥬기 -->
	<bean class="org.springframework.mail.javamail.JavaMailSenderImpl" id="javaMailSender">
		<!-- value값 => SMTP서비스를 제공해주는 컴퓨터 이름, 이컴퓨터를 이용해서 메일을 보내겠슴다 -->
		<property name="host" value="smtp.gmail.com"/>
		<!-- value값 => 구글에서 제공하는 서버 -->
		<property name="port" value="587"/>
		<!-- 구글계정 ID -->
		<property name="username" value="dooly3392"/>
		<!-- 비밀번호 -->
		<property name="password" value="wlgussla1*"/>
		<!-- 기타등등 => 메일을 암호화시켜서 보내는 기능을 제공(SSL) -->
		<!-- 필드의 타입 Propertise => 값을 전달할 경우 props사용 => 실제로 값전달은 prop -->
		<property name="javaMailProperties">
			<props>
				<!-- SSL기능을 사용하는 서버 설정 -->
				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<!-- 이 컴터가 암호화해서 보내는걸 허용할거니? -->
				<prop key="mail.smtp.starttls.enable">true</prop>
				<!-- SMTP에서 인증 허락하니? -->
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>

	<!-- 원하는 이메일을 전송하는 메소드가 선언된 클래스를 Spring Bean으로 등록 -->
	<!--  => 핵심관심모듈 -->
	<!-- 실제로는 얘까 메일을 보내쥬는거, 위에는 정보만 설정 -->
	<bean class="site.itwill07.aop.EmailSendBean" id="emailSendBean">
		<!-- JavaMailSender라는 인스턴스가 들어가야한다. -->
		<property name="mailSender" ref="javaMailSender"/>
	</bean>
	
	<!-- Advice 클래스를 Spring Bean으로 등록 >> 횡단관심모듈  -->
	<bean class="site.itwill07.aop.EmailSendAdvice" id="emailSendAdvice"/>
	
	<!-- AOP기능 구현 -->
	<aop:config>
		<!-- 클래스를 명시할 경우 패키지포함하여 명시하기 >> 그래야 패키지를 인식함  -->
		<!--  <aop:pointcut expression="execution(java.lang.String site.itwill07.aop.sendEmail(java.lang.String,java.lang.String,java.lang.String))" id=""/> -->
		<aop:pointcut expression="execution(* sendEmail(..))" id="emailSendPointCut"/>
		<aop:aspect ref="emailSendAdvice">
			<!-- pointcut이 여러번 사용되니 아예 밖으로 빼버리자 -->
			<aop:before method="beforeMessage" pointcut-ref="emailSendPointCut"/>
			
			<aop:after-returning method="successMessage" pointcut-ref="emailSendPointCut" returning="email"/>
			
			<aop:after-throwing method="failMessage" pointcut-ref="emailSendPointCut" throwing="exception"/>
		</aop:aspect>
	</aop:config>

</beans>












